[{"/home/kiki/Documents/test/permata-test/client/todo-test/src/index.js":"1","/home/kiki/Documents/test/permata-test/client/todo-test/src/App.js":"2","/home/kiki/Documents/test/permata-test/client/todo-test/src/config/api.js":"3","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/auth/auth.js":"4","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/hero/Hero.js":"5","/home/kiki/Documents/test/permata-test/client/todo-test/src/pages/Landing.js":"6","/home/kiki/Documents/test/permata-test/client/todo-test/src/pages/Home.js":"7","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/Todo.js":"8","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/contexts/UserContexts.js":"9","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/TodoList.js":"10"},{"size":1129,"mtime":1676648345231,"results":"11","hashOfConfig":"12"},{"size":1493,"mtime":1676667378102,"results":"13","hashOfConfig":"12"},{"size":369,"mtime":1676621981496,"results":"14","hashOfConfig":"12"},{"size":3951,"mtime":1676649629287,"results":"15","hashOfConfig":"12"},{"size":281,"mtime":1676519918364,"results":"16","hashOfConfig":"12"},{"size":611,"mtime":1676618573560,"results":"17","hashOfConfig":"12"},{"size":339,"mtime":1676618819998,"results":"18","hashOfConfig":"12"},{"size":2962,"mtime":1676661306349,"results":"19","hashOfConfig":"12"},{"size":855,"mtime":1676622601231,"results":"20","hashOfConfig":"12"},{"size":6728,"mtime":1676671052171,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"jwli63",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"25"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/kiki/Documents/test/permata-test/client/todo-test/src/index.js",[],[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/App.js",["55","56","57"],[],"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { useContext, useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, useNavigate } from \"react-router-dom\";\nimport { API, setAuthToken } from \"./config/api\";\n\n//page\nimport Home from \"./pages/Home\";\nimport Landing from \"./pages/Landing\";\n\n//context\nimport { UserContext } from \"./components/contexts/UserContexts\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [state, dispatch] = useContext(UserContext);\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    if (state.isLogin === false && isLoading) {\n      navigate(\"/\")\n    }else {\n        navigate(\"/home\");\n      } \n  }, [state]);\n\n  const checkUser = async () => {\n    try {\n      const response = await API.get(\"/checkAuth\");\n\n      if (response.status === 404) {\n        return dispatch({\n          type: \"AUTH_ERROR\",\n        });\n      }\n\n      let payload = response.data.data;\n      payload.token = localStorage.token;\n\n      dispatch({\n        type: \"USER_SUCCESS\",\n        payload,\n      });\n      setIsLoading(false);\n    } catch (error) {\n      console.log(error);\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    checkUser();\n  }, []);\n\n  return (\n      <Routes>\n          <Route path='/home' element={<Home />} />\n          <Route exact path=\"/\" element={<Landing />} />\n      </Routes>\n  );\n}\n\nexport default App;\n","/home/kiki/Documents/test/permata-test/client/todo-test/src/config/api.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/components/auth/auth.js",["58","59"],[],"import React, { useContext, useState } from \"react\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport { useMutation } from \"react-query\";\nimport { API } from \"../../config/api\";\nimport { UserContext } from \"../contexts/UserContexts\";\n\nconst Auth = () => {\n  const [state, dispatch] = useContext(UserContext);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [message, setMessage] = useState(null);\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const { name, email, password } = form;\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleFormSubmit = useMutation(async (e) => {\n    e.preventDefault();\n    try {\n      const requestLogin = {\n        email: form.email,\n        password: form.password,\n      };\n      const response = isSignUp\n        ? await API.post(\"/register\", form)\n        : await API.post(\"/login\", requestLogin);\n\n      if (response.status === 200 && isSignUp) {\n        setIsSignUp(false);\n        setForm({ name: \"\", email: \"\", password: \"\" });\n        setMessage(<Alert variant=\"success\">Registration success</Alert>);\n      }\n\n      if (response.status === 200 && !isSignUp) {\n        dispatch({\n          type: \"LOGIN_SUCCESS\",\n          payload: response.data.data,\n        });\n      }\n    } catch (e) {\n      console.log(e);\n      const alert = <Alert variant=\"danger\">{e.response.data.message}</Alert>;\n      setMessage(alert);\n    }\n  });\n\n  return (\n    <div className=\"d-flex align-items-center min-vh-100\">\n      <div className=\"container\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-lg-11\">\n            <h1 className=\"mb-5\">Welcome to My App</h1>\n            <Form>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  name=\"email\"\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  name=\"password\"\n                  onChange={handleChange}\n                  required\n                />\n              </Form.Group>\n              {isSignUp && (\n                <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Enter your name\"\n                    value={name}\n                    name=\"name\"\n                    onChange={handleChange}\n                    required\n                  />\n                </Form.Group>\n              )}\n              <Button\n                variant=\"primary\"\n                onClick={(e) => handleFormSubmit.mutate(e)}\n              >\n                {isSignUp ? \"Sign Up\" : \"Log In\"}\n              </Button>\n            </Form>\n            <div className=\"mt-3\">\n              {isSignUp ? (\n                <p>\n                  Already have an account?{\" \"}\n                  <Button variant=\"link\" onClick={() => setIsSignUp(false)}>\n                    Log In\n                  </Button>\n                </p>\n              ) : (\n                <p>\n                  Don't have an account?{\" \"}\n                  <Button variant=\"link\" onClick={() => setIsSignUp(true)}>\n                    Sign Up\n                  </Button>\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","/home/kiki/Documents/test/permata-test/client/todo-test/src/components/hero/Hero.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/pages/Landing.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/pages/Home.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/Todo.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/components/contexts/UserContexts.js",[],[],"/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/TodoList.js",["60"],[],{"ruleId":"61","severity":1,"message":"62","line":3,"column":27,"nodeType":"63","messageId":"64","endLine":3,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":27,"column":6,"nodeType":"67","endLine":27,"endColumn":13,"suggestions":"68"},{"ruleId":"65","severity":1,"message":"69","line":55,"column":6,"nodeType":"67","endLine":55,"endColumn":8,"suggestions":"70"},{"ruleId":"61","severity":1,"message":"71","line":8,"column":10,"nodeType":"63","messageId":"64","endLine":8,"endColumn":15},{"ruleId":"61","severity":1,"message":"72","line":10,"column":10,"nodeType":"63","messageId":"64","endLine":10,"endColumn":17},{"ruleId":"61","severity":1,"message":"73","line":19,"column":10,"nodeType":"63","messageId":"64","endLine":19,"endColumn":13},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isLoading' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'checkUser'. Either include it or remove the dependency array.",["75"],"'state' is assigned a value but never used.","'message' is assigned a value but never used.","'API' is defined but never used.",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [isLoading, navigate, state]",{"range":"80","text":"81"},"Update the dependencies array to be: [checkUser]",{"range":"82","text":"83"},[773,780],"[isLoading, navigate, state]",[1308,1310],"[checkUser]"]