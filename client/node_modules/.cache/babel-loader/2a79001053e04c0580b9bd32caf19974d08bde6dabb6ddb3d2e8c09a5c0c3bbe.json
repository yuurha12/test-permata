{"ast":null,"code":"var _jsxFileName = \"/home/kiki/Documents/test/permata-test/client/src/components/card/TodoList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { CloseSquareOutlined, DeleteOutlined, FormOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, Container, FormCheck, FormControl, InputGroup, Row } from \"react-bootstrap\";\nimport { API } from \"../../config/api\";\nimport { useQuery, useMutation } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([\"All Tasks\"]);\n  const [newCategoryInput, setNewCategoryInput] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All Tasks\");\n  const [newTaskInput, setNewTaskInput] = useState(\"\");\n  const {\n    data: categoriesData = []\n  } = useQuery(\"categories\", fetchCategories);\n  const {\n    data: tasksData = []\n  } = useQuery(\"tasks\", fetchTasks);\n  const categoryColor = [{\n    index: 0,\n    color: \"danger\"\n  }, {\n    index: 1,\n    color: \"success\"\n  }, {\n    index: 2,\n    color: \"warning\"\n  }, {\n    index: 3,\n    color: \"info\"\n  }];\n  useEffect(() => {\n    if (categoriesData.length) {\n      setCategories([\"All Tasks\", ...categoriesData]);\n    }\n  }, [categoriesData]);\n  useEffect(() => {\n    if (tasksData.length) {\n      setTasks(tasksData);\n    }\n  }, [tasksData]);\n  const [addTaskMutation] = useMutation(() => addTask(newTaskInput), {\n    onSuccess: data => {\n      setTasks([...tasks, data]);\n      setNewTaskInput(\"\");\n    }\n  });\n  const [updateTaskMutation] = useMutation(updateTask, {\n    onSuccess: data => {\n      setTasks(tasks.map(task => {\n        if (task._id === data._id) {\n          return data;\n        }\n        return task;\n      }));\n    }\n  });\n  const [deleteTaskMutation] = useMutation(deleteTask, {\n    onSuccess: data => {\n      setTasks(tasks.filter(task => task._id !== data._id));\n    }\n  });\n  const handleCategoryAdd = () => {\n    const newCategory = newCategoryInput.trim();\n    if (newCategory !== \"\" && !categories.includes(newCategory)) {\n      setCategories([...categories, newCategory]);\n      setSelectedCategory(newCategory);\n      setNewCategoryInput(\"\");\n    }\n  };\n  const handleCategoryDelete = category => {\n    setCategories(categories.filter(cat => cat !== category));\n  };\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  const handleBadge = id => {\n    if (tasks.find(task => task._id === id)) {\n      updateTaskMutation({\n        id,\n        category: selectedCategory,\n        text: newTaskInput,\n        done: !tasks.find(task => task._id === id).done\n      });\n    } else {\n      addTaskMutation({\n        category: selectedCategory,\n        text: newTaskInput\n      });\n    }\n    setNewTaskInput(\"\");\n  };\n  const handleTaskDelete = id => {\n    deleteTaskMutation(id);\n  };\n  const handleTaskUpdate = task => {\n    updateTaskMutation({\n      id: task._id,\n      category: task.category,\n      text: task.text\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center my-5\",\n            children: \"To Do List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"New Category\",\n                    value: newCategoryInput,\n                    onChange: e => setNewCategoryInput(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: handleCategoryAdd,\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(FormCheck, {\n                  type: \"radio\",\n                  id: `category-${index}`,\n                  label: category,\n                  checked: selectedCategory === category,\n                  onChange: () => handleCategoryChange(category)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"link\",\n                  size: \"sm\",\n                  className: \"text-danger float-right\",\n                  onClick: () => handleCategoryDelete(category),\n                  children: /*#__PURE__*/_jsxDEV(CloseSquareOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"New Task\",\n                    value: newTaskInput,\n                    onChange: e => setNewTaskInput(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 169,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    onClick: () => handleBadge(null),\n                    children: \"+\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), tasks.filter(task => selectedCategory === \"All Tasks\" || task.category === selectedCategory).map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-center mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(FormCheck, {\n                  type: \"checkbox\",\n                  checked: task.done,\n                  onChange: () => handleBadge(task._id),\n                  className: `text-${categoryColor[index % 4].color}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mx-3\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    plaintext: !task.editing,\n                    defaultValue: task.text,\n                    onChange: e => handleTaskUpdate({\n                      ...task,\n                      text: e.target.value\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    size: \"sm\",\n                    className: \"text-success\",\n                    onClick: () => setTasks(tasks.map(t => t._id === task._id ? {\n                      ...t,\n                      editing: !t.editing\n                    } : t)),\n                    children: /*#__PURE__*/_jsxDEV(FormOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"link\",\n                    size: \"sm\",\n                    className: \"text-danger\",\n                    onClick: () => handleTaskDelete(task._id),\n                    children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TodoList, \"q63P/p5LfToJuhrRoFV1wmIFdUE=\", false, function () {\n  return [useQuery, useQuery, useMutation, useMutation, useMutation];\n});\n_c = TodoList;\nconst fetchCategories = async () => {\n  try {\n    const response = await API.get(\"/categories\");\n    return response.data.data.categories;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst fetchTasks = async () => {\n  try {\n    const response = await API.get(\"/tasks\");\n    return response.data.data.tasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst addTask = async data => {\n  try {\n    const response = await API.post(\"/task\", data);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst updateTask = async data => {\n  try {\n    const response = await API.patch(`/task/${data.id}`, data);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst deleteTask = async id => {\n  try {\n    const response = await API.delete(`/task/${id}`);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","CloseSquareOutlined","DeleteOutlined","FormOutlined","Button","Card","Col","Container","FormCheck","FormControl","InputGroup","Row","API","useQuery","useMutation","TodoList","tasks","setTasks","categories","setCategories","newCategoryInput","setNewCategoryInput","selectedCategory","setSelectedCategory","newTaskInput","setNewTaskInput","data","categoriesData","fetchCategories","tasksData","fetchTasks","categoryColor","index","color","length","addTaskMutation","addTask","onSuccess","updateTaskMutation","updateTask","map","task","_id","deleteTaskMutation","deleteTask","filter","handleCategoryAdd","newCategory","trim","includes","handleCategoryDelete","category","cat","handleCategoryChange","handleBadge","id","find","text","done","handleTaskDelete","handleTaskUpdate","e","target","value","editing","t","response","get","error","console","log","post","patch","delete"],"sources":["/home/kiki/Documents/test/permata-test/client/src/components/card/TodoList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  CloseSquareOutlined,\n  DeleteOutlined,\n  FormOutlined,\n} from \"@ant-design/icons\";\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  FormCheck,\n  FormControl,\n  InputGroup,\n  Row,\n} from \"react-bootstrap\";\nimport { API } from \"../../config/api\";\nimport { useQuery, useMutation } from \"react-query\";\n\nexport default function TodoList() {\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([\"All Tasks\"]);\n\n  const [newCategoryInput, setNewCategoryInput] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All Tasks\");\n  const [newTaskInput, setNewTaskInput] = useState(\"\");\n\n  const { data: categoriesData = [] } = useQuery(\"categories\", fetchCategories);\n  const { data: tasksData = [] } = useQuery(\"tasks\", fetchTasks);\n\n  const categoryColor = [  {    index: 0,    color: \"danger\",  },  {    index: 1,    color: \"success\",  },  {    index: 2,    color: \"warning\",  },  {    index: 3,    color: \"info\",  },];\n\n  useEffect(() => {\n    if (categoriesData.length) {\n      setCategories([\"All Tasks\", ...categoriesData]);\n    }\n  }, [categoriesData]);\n\n  useEffect(() => {\n    if (tasksData.length) {\n      setTasks(tasksData);\n    }\n  }, [tasksData]);\n\n  const [addTaskMutation] = useMutation(() => addTask(newTaskInput), {\n    onSuccess: (data) => {\n      setTasks([...tasks, data]);\n      setNewTaskInput(\"\");\n    },\n  });\n\n  const [updateTaskMutation] = useMutation(updateTask, {\n    onSuccess: (data) => {\n      setTasks(\n        tasks.map((task) => {\n          if (task._id === data._id) {\n            return data;\n          }\n          return task;\n        })\n      );\n    },\n  });\n\n  const [deleteTaskMutation] = useMutation(deleteTask, {\n    onSuccess: (data) => {\n      setTasks(tasks.filter((task) => task._id !== data._id));\n    },\n  });\n\n  const handleCategoryAdd = () => {\n    const newCategory = newCategoryInput.trim();\n    if (newCategory !== \"\" && !categories.includes(newCategory)) {\n      setCategories([...categories, newCategory]);\n      setSelectedCategory(newCategory);\n      setNewCategoryInput(\"\");\n    }\n  };\n\n  const handleCategoryDelete = (category) => {\n    setCategories(categories.filter((cat) => cat !== category));\n  };\n\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleBadge = (id) => {\n    if (tasks.find((task) => task._id === id)) {\n      updateTaskMutation({\n        id,\n        category: selectedCategory,\n        text: newTaskInput,\n        done: !tasks.find((task) => task._id === id).done,\n      });\n    } else {\n      addTaskMutation({ category: selectedCategory, text: newTaskInput });\n    }\n    setNewTaskInput(\"\");\n  };\n\n  const handleTaskDelete = (id) => {\n    deleteTaskMutation(id);\n  };\n\n  const handleTaskUpdate = (task) => {\n    updateTaskMutation({\n      id: task._id,\n      category: task.category,\n      text: task.text,\n    });\n  };\n\n  return (\n    <>\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"text-center my-5\">To Do List</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n            <Card className=\"mb-4\">\n              <Card.Body>\n                <Card.Title>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      placeholder=\"New Category\"\n                      value={newCategoryInput}\n                      onChange={(e) => setNewCategoryInput(e.target.value)}\n                    />\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={handleCategoryAdd}\n                    >\n                      +\n                    </Button>\n                  </InputGroup>\n                </Card.Title>\n                <hr />\n                {categories.map((category, index) => (\n                  <div key={index}>\n                    <FormCheck\n                      type=\"radio\"\n                      id={`category-${index}`}\n                      label={category}\n                      checked={selectedCategory === category}\n                      onChange={() => handleCategoryChange(category)}\n                    />\n                    <Button\n                      variant=\"link\"\n                      size=\"sm\"\n                      className=\"text-danger float-right\"\n                      onClick={() => handleCategoryDelete(category)}\n                    >\n                      <CloseSquareOutlined />\n                    </Button>\n                  </div>\n                ))}\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md={8}>\n            <Card>\n              <Card.Body>\n                <Card.Title>\n                  <InputGroup className=\"mb-3\">\n                    <FormControl\n                      placeholder=\"New Task\"\n                      value={newTaskInput}\n                      onChange={(e) => setNewTaskInput(e.target.value)}\n                    />\n                    <Button\n                      variant=\"outline-secondary\"\n                      onClick={() => handleBadge(null)}\n                    >\n                      +\n                    </Button>\n                  </InputGroup>\n                </Card.Title>\n                <hr />\n                {tasks\n                  .filter(\n                    (task) =>\n                      selectedCategory === \"All Tasks\" ||\n                      task.category === selectedCategory\n                  )\n                  .map((task, index) => (\n                    <div key={index} className=\"d-flex align-items-center mb-3\">\n                      <FormCheck\n                        type=\"checkbox\"\n                        checked={task.done}\n                        onChange={() => handleBadge(task._id)}\n                        className={`text-${categoryColor[index % 4].color}`}\n                      />\n                      <div className=\"mx-3\">\n                        <FormControl\n                          plaintext={!task.editing}\n                          defaultValue={task.text}\n                          onChange={(e) =>\n                            handleTaskUpdate({ ...task, text: e.target.value })\n                          }\n                        />\n                        <Button\n                          variant=\"link\"\n                          size=\"sm\"\n                          className=\"text-success\"\n                          onClick={() =>\n                            setTasks(\n                              tasks.map((t) =>\n                                t._id === task._id\n                                  ? { ...t, editing: !t.editing }\n                                  : t\n                              )\n                            )\n                          }\n                        >\n                          <FormOutlined />\n                        </Button>\n                        <Button\n                          variant=\"link\"\n                          size=\"sm\"\n                          className=\"text-danger\"\n                          onClick={() => handleTaskDelete(task._id)}\n                        >\n                          <DeleteOutlined />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nconst fetchCategories = async () => {\n  try {\n    const response = await API.get(\"/categories\");\n    return response.data.data.categories;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchTasks = async () => {\n  try {\n    const response = await API.get(\"/tasks\");\n    return response.data.data.tasks;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst addTask = async (data) => {\n  try {\n    const response = await API.post(\"/task\", data);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst updateTask = async (data) => {\n  try {\n    const response = await API.patch(`/task/${data.id}`, data);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst deleteTask = async (id) => {\n  try {\n    const response = await API.delete(`/task/${id}`);\n    return response.data.data.task;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}