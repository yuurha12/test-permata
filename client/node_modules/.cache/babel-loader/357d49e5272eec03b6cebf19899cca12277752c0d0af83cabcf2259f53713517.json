{"ast":null,"code":"var _jsxFileName = \"/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DeleteOutlined, FormOutlined } from \"@ant-design/icons\";\nimport { Button, Card, Col, Container, FormCheck, FormControl, FormLabel, InputGroup, Row } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TodoList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([\"All Tasks\", \"Favourites\", \"Groceries\", \"Work\", \"Study\", \"Sports\"]);\n  const [newCategoryInput, setNewCategoryInput] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All Tasks\");\n  const [newTaskInput, setNewTaskInput] = useState(\"\");\n  const handleBadge = id => {\n    if (tasks.find(task => task.id === id)) {\n      setTasks(tasks.filter(task => task.id !== id));\n    } else {\n      const newTasks = tasks.concat({\n        id,\n        category: selectedCategory,\n        text: `Task ${id}`\n      });\n      setTasks(newTasks);\n    }\n  };\n  const handleCategoryAdd = () => {\n    const newCategory = newCategoryInput.trim();\n    if (newCategory !== \"\" && !categories.includes(newCategory)) {\n      setCategories([...categories, newCategory]);\n      setSelectedCategory(newCategory);\n      setNewCategoryInput(\"\");\n    }\n  };\n  const handleCategoryDelete = id => {\n    setCategories(categories.filter(category => category.id !== id));\n  };\n  const handleCategoryChange = category => {\n    setSelectedCategory(category);\n  };\n  const handleTaskDelete = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const handleTaskUpdate = (id, newText) => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          text: newText\n        };\n      }\n      return task;\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"my-5 mx-0 d-flex justify-content-center align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        bg: \"white\",\n        style: {\n          width: \"70%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-start m-3\",\n                children: [categories.map(category => /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: selectedCategory === category ? \"fw-bold\" : \"\",\n                  onClick: () => handleCategoryChange(category),\n                  children: category\n                }, category, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    className: \"opacity-50 me-2\",\n                    children: \"New category:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                    className: \"mb-3\",\n                    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                      placeholder: \"Category name\",\n                      value: newCategoryInput,\n                      onChange: e => setNewCategoryInput(e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 97,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: /*#__PURE__*/_jsxDEV(FormOutlined, {\n                        onClick: handleCategoryAdd\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-start\",\n                  children: \"TODO LIST\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                    placeholder: \"Add a new task\",\n                    value: newTaskInput,\n                    onChange: e => setNewTaskInput(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => {\n                      const newTasks = tasks.concat({\n                        id: Math.random(),\n                        category: selectedCategory,\n                        text: newTaskInput\n                      });\n                      setTasks(newTasks);\n                      setNewTaskInput(\"\");\n                    },\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this), tasks.filter(task => selectedCategory === \"All Tasks\" || task.category === selectedCategory).map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex px-3 my-2 align-content-center\",\n                children: [/*#__PURE__*/_jsxDEV(FormCheck, {\n                  className: \"me-3\",\n                  onClick: () => handleBadge(task.id),\n                  checked: tasks.find(t => t.id === task.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                  className: \"me-2\",\n                  value: task.text,\n                  onChange: e => handleTaskUpdate(task.id, e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n                  size: \"sm\",\n                  onClick: () => handleTaskDelete(task.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 23\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TodoList, \"75MGDkWXLp+jcN3kOJqhN2a/NMs=\");\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","DeleteOutlined","FormOutlined","Button","Card","Col","Container","FormCheck","FormControl","FormLabel","InputGroup","Row","TodoList","tasks","setTasks","categories","setCategories","newCategoryInput","setNewCategoryInput","selectedCategory","setSelectedCategory","newTaskInput","setNewTaskInput","handleBadge","id","find","task","filter","newTasks","concat","category","text","handleCategoryAdd","newCategory","trim","includes","handleCategoryDelete","handleCategoryChange","handleTaskDelete","handleTaskUpdate","newText","map","width","e","target","value","Math","random","t"],"sources":["/home/kiki/Documents/test/permata-test/client/todo-test/src/components/card/TodoList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DeleteOutlined, FormOutlined } from \"@ant-design/icons\"\nimport {\n  Button,\n  Card,\n  Col,\n  Container,\n  FormCheck,\n  FormControl,\n  FormLabel,\n  InputGroup,\n  Row,\n} from \"react-bootstrap\";\n\nexport default function TodoList() {\n  const [tasks, setTasks] = useState([]);\n  const [categories, setCategories] = useState([\n    \"All Tasks\",\n    \"Favourites\",\n    \"Groceries\",\n    \"Work\",\n    \"Study\",\n    \"Sports\",\n  ]);\n\n  const [newCategoryInput, setNewCategoryInput] = useState(\"\");\n  const [selectedCategory, setSelectedCategory] = useState(\"All Tasks\");\n  const [newTaskInput, setNewTaskInput] = useState(\"\");\n\n  const handleBadge = (id) => {\n    if (tasks.find((task) => task.id === id)) {\n      setTasks(tasks.filter((task) => task.id !== id));\n    } else {\n      const newTasks = tasks.concat({\n        id,\n        category: selectedCategory,\n        text: `Task ${id}`,\n      });\n      setTasks(newTasks);\n    }\n  };\n\n  const handleCategoryAdd = () => {\n    const newCategory = newCategoryInput.trim();\n    if (newCategory !== \"\" && !categories.includes(newCategory)) {\n      setCategories([...categories, newCategory]);\n      setSelectedCategory(newCategory);\n      setNewCategoryInput(\"\");\n    }\n  };\n\n  const handleCategoryDelete = (id) => {\n    setCategories(categories.filter((category) => category.id !== id))\n  }\n\n  const handleCategoryChange = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const handleTaskDelete = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  const handleTaskUpdate = (id, newText) => {\n    setTasks(\n      tasks.map((task) => {\n        if (task.id === id) {\n          return { ...task, text: newText };\n        }\n        return task;\n      })\n    );\n  };\n\n  return (\n    <>\n      <Container className=\"my-5 mx-0 d-flex justify-content-center align-items-center\">\n        <Card bg=\"white\" style={{ width: \"70%\" }}>\n          <Container className=\"text-center\">\n            <Row>\n              <Col xs={3}>\n                <div className=\"text-start m-3\">\n                  {categories.map((category) => (\n                    <p\n                      key={category}\n                      className={selectedCategory === category ? \"fw-bold\" : \"\"}\n                      onClick={() => handleCategoryChange(category)}\n                    >\n                      {category}\n                    </p>\n                  ))}\n                  <div className=\"d-flex align-items-center\">\n                    <FormLabel className=\"opacity-50 me-2\">\n                      New category:\n                    </FormLabel>\n                    <InputGroup className=\"mb-3\">\n                      <FormControl\n                        placeholder=\"Category name\"\n                        value={newCategoryInput}\n                        onChange={(e) => setNewCategoryInput(e.target.value)}\n                      />\n                      <span>\n                        <FormOutlined onClick={handleCategoryAdd}/>\n                      </span>\n                    </InputGroup>\n                  </div>\n                </div>\n              </Col>\n\n              <Col xs={6}>\n                <div className=\"p-3\">\n                  <p className=\"text-start\">TODO LIST</p>\n                  <InputGroup className=\"mb-2\">\n                    <FormControl\n                      placeholder=\"Add a new task\"\n                      value={newTaskInput}\n                      onChange={(e) => setNewTaskInput(e.target.value)}\n                    />\n                    <Button\n                      onClick={() => {\n                        const newTasks = tasks.concat({\n                          id: Math.random(),\n                          category: selectedCategory,\n                          text: newTaskInput,\n                        });\n                        setTasks(newTasks);\n                        setNewTaskInput(\"\");\n                      }}\n                    >\n                      Add\n                    </Button>\n                  </InputGroup>\n                </div>\n                {tasks\n                  .filter(\n                    (task) =>\n                      selectedCategory === \"All Tasks\" ||\n                      task.category === selectedCategory\n                  )\n                  .map((task) => (\n                    <div\n                      key={task.id}\n                      className=\"d-flex px-3 my-2 align-content-center\"\n                    >\n                      <FormCheck\n                        className=\"me-3\"\n                        onClick={() => handleBadge(task.id)}\n                        checked={tasks.find((t) => t.id === task.id)}\n                      />\n                      <FormControl\n                        className=\"me-2\"\n                        value={task.text}\n                        onChange={(e) =>\n                          handleTaskUpdate(task.id, e.target.value)\n                        }\n                      />\n                      <DeleteOutlined\n                        size=\"sm\"\n                        onClick={() => handleTaskDelete(task.id)}\n                      />\n                    </div>\n                  ))}\n              </Col>\n            </Row>\n          </Container>\n        </Card>\n      </Container>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}